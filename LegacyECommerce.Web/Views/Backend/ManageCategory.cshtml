<!-- 引用视图模型 -->
@model LegacyECommerce.Web.ViewModels.CategoryListViewModel

<!-- 網站標題和引用母版 -->
@{
    //ViewBag.Title = "管 理 分 類 頁";
    Layout = "~/Views/Backend/Partial/_Main.cshtml";
}

<!-- #region 【 Html 顯示區域 】 -->
<!-- 路徑導航 -->
<div>
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href=@Url.Action("Home","Backend")>首頁</a>
            </li>

            <li class="breadcrumb-item active">
                管理分類頁
            </li>
        </ol>
    </nav>
</div>

<!-- 頂部功能列 -->
<div class="search-group">
    <!-- 搜索輸入框 -->
    <input id="searchInput" type="text" class="form-control" placeholder="請輸入分類的名稱進行查詢..." />

    <!-- 搜索按鈕 -->
    <button id="searchButton" class="btn btn-search">
        <i class="fa fa-search">&nbsp;&nbsp;</i>搜索
    </button>

    <!-- 重置按鈕 -->
    <button id="resetButton" class="btn btn-reset">
        <i class="fa fa-sync">&nbsp;&nbsp;</i>重置
    </button>

    <!-- 新增按鈕 -->
    <a href=@Url.Action("CreateCategoryPage", "Backend") class="btn btn-add">
        <i class="fa fa-plus">&nbsp;&nbsp;</i>新增分類
    </a>
</div>

<!-- 表格内容 -->
<table class="table table-hover table-bordered">
    <thead>
        <tr>
            <th>名 稱</th>
            <th>圖 片</th>
            <th>熱 門</th>
            <th>操 作</th>
        </tr>
    </thead>

    <tbody>
    </tbody>
</table>

<!-- 尾部功能列 -->
<div class="table-footer d-flex flex-column flex-md-row justify-content-between align-items-center mt-4 p-3 border-top">
    <!-- 過濾選項 -->
    <div class="page-size d-flex align-items-center mb-2 mb-md-0">
        <span class="me-2">分類數量&nbsp;</span>

        <select id="pagesizeDropdown" class="form-select form-select-sm page-size-select" title="每頁顯示幾筆資料">
            <option value="10" selected>顯示 10 筆</option>
            <option value="20">顯示 20 筆</option>
            <option value="50">顯示 50 筆</option>
            <option value="100">顯示 100 筆</option>
        </select>
    </div>

    <!-- 分頁選項 -->
    <div class="pagination-wrapper d-flex justify-content-center mb-2 mb-md-0 flex-grow-1">
        <ul id="pagination" class="pagination mb-2 mb-md-0 justify-content-center">
            <!-- 上一頁 -->
            <li id="previousButton" class="page-item">
                <a class="page-link" href="#">
                    <i class="fa fa-angle-left"></i>
                </a>
            </li>

            <!-- pagination -->
            <!-- 下一頁 -->
            <li id="nextButton" class="page-item">
                <a class="page-link" href="#">
                    <i class="fa fa-angle-right"></i>
                </a>
            </li>
        </ul>
    </div>

    <!-- 顯示數據 -->
    <div id="recordLabel" class="alert alert-primary d-flex align-items-center justify-content-center mt-3 mb-0" style="font-size: 15px;">
        <i class="fa fa-database me-2">&nbsp;&nbsp;</i>
        目前顯示
        <strong class="mx-1">
            <span id="startLabel">
                <!-- pagestart -->
            </span>~
            <span id="endLabel">
                <!-- pagesize -->
            </span>
        </strong> 筆，共
        <strong class="mx-1">
            <span id="totalLabel">
                <!-- totalrecords -->
            </span>
        </strong> 筆
    </div>
</div>

<!-- 圖片放大 Modal -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content p-3" style="max-width: 700px; margin: auto;">
            <div class="modal-body text-center p-3">
                <img src="" id="modalImage" class="modal-image" alt="放大圖片" />
            </div>
        </div>
    </div>
</div>
<!-- #endregion -->
<!-- #region 【 Javascript 脚本控制 】 -->
<script>
    //#region 【 ===== 全 局 變 量 聲 明 ===== 】
    let currentPage = 1;

    const searchInput = document.getElementById("searchInput");
    const searchButton = document.getElementById("searchButton");
    const resetButton = document.getElementById("resetButton");
    const tableBody = document.querySelector("tbody");

    const pagesizeDropdown = document.getElementById("pagesizeDropdown");

    const pagination = document.getElementById("pagination");
    const previousButton = document.getElementById("previousButton");
    const nextButton = document.getElementById("nextButton");

    const startLabel = document.getElementById("startLabel");
    const endLabel = document.getElementById("endLabel");
    const totalLabel = document.getElementById("totalLabel");
    //#endregion

    // #region 【 ===== 功 能 函 數 ===== 刪除未修改】
    function bindDeleteEvents() {
        const deleteButtons = document.querySelectorAll(".btn-delete");

        deleteButtons.forEach(button => {
            button.addEventListener("click", async (e) => {
                const button = e.currentTarget;
                const categoryId = button.dataset.id;
                const categoryName = button.dataset.name;

                if (!confirm(`你確定要刪除【${categoryName}】，這個分類嗎？`)) {
                    return;
                }

                const response =  await fetch("/CategoryApi/DeleteCategory", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ dtoId: categoryId })
                })

                const result = await response.json();
                if (result.Success) {
                    alert(result.Message);
                    initPage();
                }
                else {
                    alert(result.Message);
                }
            })
        })
    }

    function renderTable(items) {
        if (!Array.isArray(items) || items.length === 0) {
            tableBody.innerHTML = `
                <tr>
                    <td colspan="4" class="text-center text-muted" style="padding: 60px 0;">
                      <div style="display: inline-flex; flex-direction: column; align-items: center; font-size: 16px;">
                        <svg width="96" height="96" style="margin-bottom: 16px;" viewBox="0 0 24 24" fill="none">
                          <path fill="currentColor"
                            d="M12,2A10,10 0 1,0 22,12A10,10 0 0,0 12,2M11,6H13V13H11V6M11,16H13V18H11V16Z" />
                        </svg>

                        <div style="font-size: 22px;font-weight: 500;">目前查無符合條件的數據！</div>
                        <div style="font-size: 18px; color: #aaa; margin-top: 4px;">請調整篩選條件後再試一次</div>
                      </div>
                    </td>
                </tr>
             `;
        return;
        }
        tableBody.innerHTML = items.map(obj => `
            <tr>
                <td>${obj.CategoryName}</td>
                <td>
                    <img src="${obj.CategoryImageUrl}" class="category-img" alt="分類圖片" />
                </td>
                <td>
                    <span class="badge ${obj.PopularCategory ? 'bg-danger' : 'bg-info'} text-white">
                        ${obj.PopularCategory ? '熱門' : '一般'}
                    </span>
                </td>
                <td>
                    <a href="@Url.Action("UpdateCategoryPage", "Backend")?id=${obj.CategoryId}" class="btn btn-sm btn-edit">
                        <i class="fa fa-edit">&nbsp;&nbsp;</i>修 改
                    </a>

                    <button class="btn btn-sm btn-delete" data-id="${obj.CategoryId}" data-name="${obj.CategoryName}">
                        <i class="fa fa-trash">&nbsp;&nbsp;</i>刪 除
                    </button>
                </td>
            </tr>
        `).join("");
    }

    function renderPagination(pageInfo) {
        // 清空分頁，確保上下頁元素之間，沒有分頁元素
        while (previousButton.nextSibling && previousButton.nextSibling != nextButton) {
            pagination.removeChild(previousButton.nextSibling);
        }

        for (let i = 1; i <= pageInfo.totalPages; i++) {
            // 創建<li>元素
            const li = document.createElement("li");
            li.classList.add("page-item");

            // 高亮顯示當前分頁
            if (i === pageInfo.pageNumber) {
                li.classList.add("active");
            }

            // 創建<a>元素
            const a = document.createElement("a");
            a.classList.add("page-link");
            a.href = "#";
            a.textContent = i;

            // 將<a>元素放入<li>元素之中
            li.append(a);
            pagination.insertBefore(li, nextButton);

            // 禁用無效的上下頁元素範圍
            previousButton.classList.toggle("disabled", pageInfo.pageNumber === 1);
            nextButton.classList.toggle("disabled", pageInfo.pageNumber === pageInfo.totalPages);

            currentPage = pageInfo.pageNumber;
        }
    }

    function renderLabel(pageInfo) {
        startLabel.textContent = pageInfo.pageStart;
        endLabel.textContent = pageInfo.pageSize;
        totalLabel.textContent = pageInfo.totalRecords;
    }
    // #endregion

    //#region 【 ===== 請 求 函 數 ===== 】
    async function fetchCategoryData(searchkeyValue, pagenumberValue, pagesizeValue) {
        const response = await fetch("/CategoryApi/Query", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                searchKey: searchkeyValue,
                pageNumber: pagenumberValue,
                pageSize: pagesizeValue
            })
        })

        const data = await response.json();
        return data;
    }
    //#endregion

    //#region 【 ===== 主 函 數 ===== 】
    async function initPage(pagenumberValue = 1) {
        const searchValue = searchInput.value.trim();
        const pagesizeValue = parseInt(pagesizeDropdown.value);

        // 發送請求並取回結果
        const res = await fetchCategoryData(searchValue, pagenumberValue, pagesizeValue);

        // 定義返回數據變量
        const message = res.Result.Message;
        const code = res.Result.Code;
        const items = res.Result.Items;
        
        const pageInfo = {
            totalRecords: res.Result.TotalRecords,
            totalPages: res.Result.TotalPages,
            pageStart: res.Result.PageStart,
            pageSize: res.Result.PageSize,
            pageNumber: res.Result.PageNumber
        }

        // 請求成功
        if (code == 200) {
            renderTable(items);
            bindDeleteEvents();
            renderPagination(pageInfo);
            renderLabel(pageInfo);
        }
        // 請求失敗
        else {
            tableBody.innerHTML = `
                <tr>
                    <td colspan="4" class="text-center text-muted" style="padding: 60px 0;">
                        <div style="display: inline-flex; flex-direction: column; align-items: center; font-size: 16px;">
                        <svg width="96" height="96" style="margin-bottom: 16px;" viewBox="0 0 24 24" fill="none">
                            <path fill="currentColor"
                            d="M12,2A10,10 0 1,0 22,12A10,10 0 0,0 12,2M11,6H13V13H11V6M11,16H13V18H11V16Z" />
                        </svg>

                        <div style="font-size: 22px;font-weight: 500;">目前查無符合條件的數據！</div>
                        <div style="font-size: 18px; color: #aaa; margin-top: 4px;">請調整篩選條件後再試一次</div>
                        </div>
                    </td>
                </tr>
            `;

            // 清除分頁按鈕
            while (previousButton.nextSibling && previousButton.nextSibling !== nextButton) {
                pagination.removeChild(previousButton.nextSibling);
            }

            // 清除顯示數據
            startLabel.textContent = 0;
            endLabel.textContent = 0;
            totalLabel.textContent = 0;
        }
    }
    //#endregion

    //#region 【 ===== 入 口 函 數 ===== 】
    document.addEventListener("DOMContentLoaded", () => {
        // 刷新頁面
        initPage();

        // 搜索按鈕事件
        searchButton.addEventListener("click", () => {
            initPage(1);                    // 回到第一頁
            searchInput.value = "";         // 清除搜索框文字
        });

        // 重置按鈕事件
        resetButton.addEventListener("click", () => {
            searchInput.value = "";         // 清除搜索框文字
            initPage();                     // 刷新頁面
        });

        // 過濾選項事件
        pagesizeDropdown.addEventListener("click", () => initPage(1));

        // 分頁選項事件
        pagination.addEventListener("click", (e) => {
            e.preventDefault();
            const target = e.target;

            if (!target.classList.contains("page-link")) return;

            if (target.parentElement.id === "previousButton" && !previousButton.classList.contains("disabled"))
            {
                initPage(currentPage - 1);
            }
            else if (target.parentElement.id === "nextButton" && !nextButton.classList.contains("disabled"))
            {
                initPage(currentPage + 1);
            }
            else {
                const pageNum = parseInt(target.textContent);
                if (!isNaN(pageNum) && pageNum !== currentPage) {
                    initPage(pageNum);
                }
            }
        });
    });
    //#endregion
</script>
<!-- #endregion -->